- Cool wäre es wenn alle auf ihrem eigenen Brett den Agenten aufbauen könnten.
Andererseits möchte man vielleicht eine Rumpfklasse zur Verfügung stellen, in 
der die Schüler fehlenden Code programmieren sollen.

Erklärung zero-sum:

Beurteilung der Spielstellung:

sehr gut, gut, augeglichen, schlecht, sehr schlecht

Ist die Stellung für Rot gut, wie ist sie für Gelb? => schlecht.
Ist die Stellung für Rot sehr gut, wie ist sie für Gelb? => sehr schlecht.
Wenn die Stellung ausgeglichen ist, ist sie für beide ausgeglichen.

veraunschaulichung mit Spielsteinen (Vier gewinnt, auf Amazon bestellen).

Spielzug
-----------

Hat eine ToString Methode damit ein ungültiger Spielzug in FühreSpielzugAus eine sprechende Exception 
geworfen werden kann.

Spielstellung.cs
-----------------

Vier Gewinnt: Speichere den letzten Zug. Nicht bei Tic Tac Toe!
=> Entferne SetProperty. Von außen haben wir die Klasse nicht geändert! Gelöschter Code ist gedebuggter Code.

Mögliche Züge: yield return ist besser anstatt Liste. Gib Enumerable zurück.

AlsZeichen => Switch Expression

VierGewinnt: Spielzug ist gültig: Überprüfe array bounds.

Partie.cs
----------

ErhalteNächstenSpielzug: Zunächst mit if/else, dann mit switch statement, dann mit switch expression.